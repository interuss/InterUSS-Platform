# Copyright 2018 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Definition for Docker image that runs an InterUSS Platform auth server.

# To build an image from this Dockerfile:
# docker image build -f Dockerfile_authserver -t interussplatform/auth_server ../src

# To run this image, change to a working directory containing just public.pem, private.pem, and
# roster.txt (see `auth_server --help` for details) and then execute:
# docker run -v `pwd`:/resources -p 8121:8121 -d interussplatform/auth_server

# Optional environment variables:
#   INTERUSS_AUTH_SERVER: IP address that will respond to auth server requests (default 0.0.0.0).
#   INTERUSS_AUTH_PORT: Port on which the auth server will be served (default 5000). This port may
#     also be exposed outside the container with -p flag.
#   INTERUSS_VERBOSE: True for more log messages from the auth server (default true).
#   INTERUSS_ISSUER: Text that will appear in 'iss' field of access_tokens (default
#     interussplatform.com).
#   INTERUSS_AUTH_EXPIRATION: Number of seconds after issuance that access tokens will expire
#     (default 3600).

FROM python:2

WORKDIR /usr/src/app

RUN pip install --no-cache-dir flask PyJWT djangorestframework cryptography gunicorn

COPY . .

ENV INTERUSS_AUTH_SERVER 0.0.0.0
ENV INTERUSS_AUTH_PORT 5000
ENV INTERUSS_AUTH_VERBOSE true
ENV INTERUSS_AUTH_ISSUER interussplatform.com
ENV INTERUSS_AUTH_EXPIRATION 3600
ENV INTERUSS_AUTH_PUBLIC_KEY /resources/public.pem
ENV INTERUSS_AUTH_PRIVATE_KEY /resources/private.pem
ENV INTERUSS_AUTH_ROSTER /resources/roster.txt

CMD gunicorn auth_server:webapp -b ${INTERUSS_AUTH_SERVER}:${INTERUSS_AUTH_PORT} --access-logfile -

EXPOSE $INTERUSS_AUTH_PORT
