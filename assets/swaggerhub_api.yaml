swagger: '2.0'
info:
  description: |
    This repository contains a simple, open, and API used for separate UAS Service Suppliers (USS) to communicate during UAS operations, known as the InterUSS Platformâ„¢. This flexible and distributed system is used to connect multiple USSs operating in the same general area to share information while protecting operator and consumer privacy. The system is focused on facilitating communication amongst actively operating USSs with no details about UAS operations stored or processed on the InterUSS Platform.

    ### Main Features

    * Simple, open, flexible, and scalable information interface and Optimistic Concurrency Control to simplify USS to USS communication and control race conditions.
    * Effective information sharing to enable sharing of positions specifically for a public portal user to see all the operations around them, no matter which USS the drone operator is using.
    * Effective demonstration of a solution to networked identification of drones using a UTM

    ### Main Assumptions

    * Trust each USS to send flight data when drone flights are active.
    * Auditing is available, as all USSs can verify the authorship and addition of erroneous data.

    For more information, see the InterUSS Platform technical document located here: https://docs.google.com/document/d/1JtSvSnvskrctbCF8qsU7ZIMTzYegZtGDj4-a8kdC_Cs/

    or the GitHub repository located here:
    https://github.com/wing-aviation/InterUSS-Platform

    # Try it out

    The below API are connected to a sandbox environment to allow you to try the different API. For endpoints with an access_token, retrieve an access token from https://auth.staging.interussplatform.com:8121/oauth/token?grant_type=client_credentials using Basic authentication.

  version: "publicportal1.1.1"
  title: InterUSS Platform - Data Node Stateless API
  contact:
    email: hikevin+interuss@google.com
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0

paths:
  /status:
    get:
      summary: Just a quick status checker on the API layer
      produces:
      - application/json
      responses:
        200:
          description: Success, JSend version of OK
          schema:
            $ref: '#/definitions/JSendStatusResponse'

  /slippy/{zoom}:
    get:
      summary: Figures out which slippy tiles are impacted by a CSV list of latitudes and longitudes
      produces:
      - application/json
      parameters:
      - name: zoom
        in: path
        description: Zoom level to use for tiles
        required: true
        type: integer
      - name: coords
        in: query
        description: CSV list of latitude,longitude,latitude,longitude...
        required: true
        type: string
      - name: coord_type
        in: query
        description: Type of query (point, path, or polygon)
        default: point
        type: string
        enum:
          - point
          - path
          - polygon
      responses:
        200:
          description: Success, JSend version of tiles and links to tiles
          schema:
            $ref: '#/definitions/JSendSlippyResponse'
        400:
          description: Invalid zoom or csv

  /introspect:
    get:
      summary: Status checker of an authorization token
      produces:
      - application/json
      parameters:
      - name: access_token
        in: header
        description: Access token to validate
        required: true
        type: string
      responses:
        200:
          description: JSend version of validated access token
          schema:
            $ref: '#/definitions/JSendIntrospectResponse'
        400:
          description: Invalid/expired token or invalid format
        403:
          description: Access token not provided

  /GridCellMetaData/{zoom}/{x}/{y}:
    get:
      summary: Provides an instantaneous snapshot of the metadata for a specific GridCell
      produces:
      - application/json
      parameters:
      - name: access_token
        in: header
        description: Valid OAuth access token
        type: string
        default: sandbox
        required: true
      - name: zoom
        in: path
        description: Zoom level in slippy tile format
        required: true
        type: integer
      - name: x
        in: path
        description: x tile number in slippy tile format
        required: true
        type: integer
      - name: y
        in: path
        description: y tile number in slippy tile format
        required: true
        type: integer
      responses:
        200:
          description: JSend version of grid metadata, including the sync_token used for updating grids
          schema:
            $ref: '#/definitions/JSendGridCellMetadataResponse'
        400:
          description: Invalid request
        403:
          description: Access token not provided
    put:
      summary: Updates the metadata stored in a specific GridCell
      consumes:
      - application/x-www-form-urlencoded
      produces:
      - application/json
      parameters:
      - name: access_token
        in: header
        description: Valid OAuth access token
        required: true
        default: sandbox
        type: string
      - name: zoom
        in: path
        description: Zoom level in slippy tile format
        required: true
        type: integer
      - name: x
        in: path
        description: x tile number in slippy tile format
        required: true
        type: integer
      - name: y
        in: path
        description: y tile number in slippy tile format
        required: true
        type: integer
      - name: scope
        in: formData
        description: The submitting USS scope for the web service endpoint (used for OAuth access)
        required: true
        type: string
      - name: sync_token
        in: formData
        description: The synchronization token retrieved in the original GET GridCellMetadata
        type: integer
        format: int64
      - name: operation_endpoint
        in: formData
        description: The submitting USS web service endpoint where all operation data in this cell can be retrieved from for the purposes of strategic deconfliction. A sync_token is required to submit this data, implying the USS has performed all strategic deconfliction steps with the latest flight operation data from all active USSs.
        type: string
      - name: operation_format
        in: formData
        description: The output format for the USS web service endpoint (i.e. NASA, GUTMA)
        type: string
      - name: public_portal_endpoint
        in: formData
        description: The submitting USS web service endpoint where all public flight remote identification telemetry in this cell can be retrieved from for the purposes of displaying to the public or to authorities
        type: string
      - name: flight_info_endpoint
        in: formData
        description: The submitting USS web service endpoint where a public flight's remote identification details can be retrieved from for the purposes of displaying to the public or to authorities. This requires a unique identifier.
        type: string
      - name: minimum_operation_timestamp
        in: formData
        description: the lower time bound of all of the USS's flights in this GridCell
        required: true
        type: string
        format: date-time
      - name: maximum_operation_timestamp
        in: formData
        description: The upper time bound of all of the USS's flights in this GridCell
        required: true
        type: string
        format: date-time
      responses:
        200:
          description: JSend version of updated grid metadata
          schema:
            $ref: '#/definitions/JSendGridCellMetadataResponse'
        400:
          description: Invalid request
        403:
          description: Valid OAuth access token
        408:
          description: Unable to lock GridCell
        409:
          description: Sync token does not match (GridCell updated since GET)
        424:
          description: JSON is not in the correct format

    delete:
      summary: Removes the USS entry in the metadata stored in a specific GridCell
      produces:
      - application/json
      parameters:
      - name: access_token
        in: header
        description: Valid OAuth access token
        required: true
        default: sandbox
        type: string
      - name: zoom
        in: path
        description: Zoom level in slippy tile format
        required: true
        type: integer
      - name: x
        in: path
        description: x tile number in slippy tile format
        required: true
        type: integer
      - name: y
        in: path
        description: y tile number in slippy tile format
        required: true
        type: integer
      responses:
        200:
          description: Success, Jend version of updated grid metadata
          schema:
            $ref: '#/definitions/JSendGridCellMetadataResponse'
        400:
          description: Invalid request
        403:
          description: Access token not provided
        408:
          description: Unable to lock GridCell

  /GridCellsMetaData/{zoom}:
    get:
      summary: Provides an instantaneous snapshot of the metadata for multiple GridCells based on a set of points, a path, or an enclosed polygon.
      produces:
      - application/json
      parameters:
      - name: access_token
        in: header
        description: Valid OAuth access token
        type: string
        default: sandbox
        required: true
      - name: zoom
        in: path
        description: Zoom level in slippy tile format
        required: true
        type: integer
      - name: coords
        in: query
        description: CSV list of latitude,longitude,latitude,longitude...
        required: true
        type: string
      - name: coord_type
        in: query
        description: Type of query (point, path, or polygon)
        default: point
        type: string
        enum:
          - point
          - path
          - polygon
      responses:
        200:
          description: JSend version of grid metadata, including the composite sync_token used for updating multiple grids
          schema:
            $ref: '#/definitions/JSendGridCellMetadataResponse'
        400:
          description: Invalid request
        403:
          description: Access token not provided
    put:
      summary: Updates the metadata stored for multiple GridCells based on a set of points, a path, or an enclosed polygon.
      consumes:
      - application/x-www-form-urlencoded
      produces:
      - application/json
      parameters:
      - name: access_token
        in: header
        description: Valid OAuth access token
        required: true
        default: sandbox
        type: string
      - name: zoom
        in: path
        description: Zoom level in slippy tile format
        required: true
        type: integer
      - name: coords
        in: formData
        description: CSV list of latitude,longitude,latitude,longitude...
        required: true
        type: string
      - name: coord_type
        in: formData
        description: Type of query (point, path, or polygon)
        default: point
        type: string
        enum:
          - point
          - path
          - polygon
      - name: scope
        in: formData
        description: The submitting USS scope for the web service endpoint (used for OAuth access)
        required: true
        type: string
      - name: sync_token
        in: formData
        description: The synchronization token retrieved in the original GET GridCellMetadata
        type: integer
        format: int64
      - name: operation_endpoint
        in: formData
        description: The submitting USS web service endpoint where all operation data in this cell can be retrieved from for the purposes of strategic deconfliction. A sync_token is required to submit this data, implying the USS has performed all strategic deconfliction steps with the latest flight operation data from all active USSs.
        type: string
      - name: operation_format
        in: formData
        description: The output format for the USS web service endpoint (i.e. NASA, GUTMA)
        type: string
      - name: public_portal_endpoint
        in: formData
        description: The submitting USS web service endpoint where all public flight remote identification telemetry in this cell can be retrieved from for the purposes of displaying to the public or to authorities
        type: string
      - name: flight_info_endpoint
        in: formData
        description: The submitting USS web service endpoint where a public flight's remote identification details can be retrieved from for the purposes of displaying to the public or to authorities. This requires a unique identifier.
        type: string
      - name: minimum_operation_timestamp
        in: formData
        description: the lower time bound for this specific set of USS's flights
        required: true
        type: string
        format: date-time
      - name: maximum_operation_timestamp
        in: formData
        description: The upper time bound of all of the USS's flights in this GridCell
        required: true
        type: string
        format: date-time
      responses:
        200:
          description: JSend version of updated grid metadata
          schema:
            $ref: '#/definitions/JSendGridCellMetadataResponse'
        400:
          description: Invalid request
        403:
          description: Valid OAuth access token
        408:
          description: Unable to lock GridCell
        409:
          description: Sync token does not match (GridCell updated since GET)
        424:
          description: JSON is not in the correct format
    delete:
      summary: Removes the USS entry in the metadata stored in multiple GridCells based on a set of points, a path, or an enclosed polygon.
      produces:
      - application/json
      parameters:
      - name: access_token
        in: header
        description: Valid OAuth access token
        required: true
        default: sandbox
        type: string
      - name: zoom
        in: path
        description: Zoom level in slippy tile format
        required: true
        type: integer
      - name: coords
        in: query
        description: CSV list of latitude,longitude,latitude,longitude...
        required: true
        type: string
      - name: coord_type
        in: query
        description: Type of query (point, path, or polygon)
        default: point
        type: string
        enum:
          - point
          - path
          - polygon
      responses:
        200:
          description: Success, Jend version of updated grid metadata
          schema:
            $ref: '#/definitions/JSendGridCellMetadataResponse'
        400:
          description: Invalid request
        403:
          description: Access token not provided
        408:
          description: Unable to lock GridCell


  /USS_public_portal_endpoint/{coords}:
    get:
      summary: Provided by the active USS (not the InterUSS Platform Data node), this endpoint provides telemetry and/or volume details for use by public portals to meet remote ID requirements
      produces:
      - application/json
      parameters:
      - name: access_token
        in: header
        description: Valid OAuth access token specifically for this USS
        type: string
        default: sandbox
        required: true
      - name: coords
        in: path
        description: CSV list of latitude,longitude[,latitude,longitude...] that composes the polygon for the view (bounding box preferred). There should be limits enforced by the USS to 3600m diagonal, 1800m radius, or about 10km2 area.
        required: true
        type: string
      - name: history
        in: query
        required: false
        description: range of history request, in seconds (<60)
        minimum: 1
        maximum: 60
        default: 60
        type: integer
      responses:
        200:
          description: JSend version of the public portal response, providing telemetry and/or volume information around the specified point
          schema:
            $ref: '#/definitions/JSendPublicPortalResponse'
        400:
          description: Invalid request
        403:
          description: Access token not provided

  /USS_flight_info_endpoint/{uuid_operation}:
    get:
      summary: Provided by the active USS (not the InterUSS Platform Data node), this endpoint provides flight details for a specific uuid
      produces:
      - application/json
      parameters:
      - name: access_token
        in: header
        description: Valid OAuth access token specifically for this USS
        type: string
        default: sandbox
        required: true
      - name: uuid_operation
        description: Unique identifier for the flight provided by the UTM system
        in: path
        required: true
        type: string
      responses:
        200:
          description: JSend version of the flight information response, providing information for one specific flight identified by the UUID
          schema:
            $ref: '#/definitions/JSendFlightInformationResponse'
        400:
          description: Invalid request
        403:
          description: Access token not provided


definitions:
  JSendStatusResponse:
    type: object
    properties:
      status:
        type: string
        example: 'success'
      message:
        type: string
        example: 'OK'
      version:
        type: string
        example: '1.1.1.006'

  JSendIntrospectResponse:
    type: object
    properties:
      status:
        type: string
      message:
        type: string
      data:
        type: object
        properties:
          uss_id:
            type: string

  JSendSlippyResponse:
    type: object
    properties:
      status:
        type: string
      message:
        type: string
      data:
        type: object
        format: json
        properties:
          zoom:
            type: integer
          grid_cells:
            type: array
            items:
              type: object
              properties:
                link:
                  type: string
                zoom:
                  type: integer
                x:
                  type: integer
                y:
                  type: integer

  JSendGridCellMetadataResponse:
    type: object
    properties:
      status:
        type: string
        minLength: 1
        maxLength: 100
        example: 'success'
      sync_token:
        type: integer
        format: int64
        minimum: 0
        description: The zxid, which is a long (64-bit) integer
        example: 8
      data:
        $ref: '#/definitions/GridCellMetadataResponse'

  GridCellMetadataResponse:
    type: object
    format: json
    properties:
      version:
        type: integer
        example: 3
      timestamp:
        type: string
        format: date-time
        example: '2015-08-20T03:14:32.819+00:00'
      operators:
        type: array
        items:
          properties:
            uss:
              type: string
              example: 'myuss.com'
            scope:
              type: string
            version:
              type: integer
              example: 3
            timestamp:
              type: string
              format: date-time
              example: '2015-08-20T03:14:32.819+00:00'
            operation_endpoint:
              type: string
              example: 'https://myuss.com/operations/{z}/{x}/{y}'
            operation_format:
              type: string
              example: 'NASA'
            public_portal_endpoint:
              type: string
              example: 'https://myuss.com/publicportal'
            flight_info_endpoint:
              type: string
              example: 'https://myuss.com/flightinfo'
            minimum_operation_timestamp:
              type: string
              format: date-time
              example: '2015-08-20T03:14:32.819+00:00'
            maximum_operation_timestamp:
              type: string
              format: date-time
              example: '2015-08-20T03:18:00.011+00:00'
            zoom:
              type: integer
              example: 11
            x:
              type: integer
              example: 565
            y:
              type: integer
              example: 795

  JSendPublicPortalResponse:
    type: object
    properties:
      status:
        type: string
        minLength: 1
        maxLength: 100
        example: 'success'
      data:
        $ref: '#/definitions/PublicPortalResponse'

  PublicPortalResponse:
    type: object
    format: json
    properties:
      timestamp:
        type: string
        format: date-time
        example: '2015-08-20T03:14:32.819+00:00'
      telemetries:
        type: array
        items:
          $ref: '#/definitions/TelemetryResponse'
      volumes:
        type: array
        items:
          $ref: '#/definitions/VolumeResponse'


  TelemetryResponse:
    type: object
    format: json
    properties:
      uuid_serial:
        description: Serial number of the aircraft
        type: string
        example: 'INTCJ123-4567-890'
      uuid_reg:
        description: Country/State registration number of the aircraft
        type: string
        example: 'FA12345897'
      uuid_operation:
        description: UTM Flight ID for this flight
        type: string
        example: 'a3423b-213401-0023'
      drone_type:
        description: Generic type of drone
        type: string
        default: unknown
        enum:
          - unknown
          - vtol
          - fixed_wing
          - multirotor
        example: 'vtol'
      position_history:
        type: array
        items:
          properties:
            timestamp:
              type: string
              format: date-time
              example: '2015-08-20T03:14:32.819+00:00'
            latitude:
              type: number
              minimum: -90
              maximum: 90
              example: 37.4096
            longitude:
              type: number
              minimum: -180
              maximum: 180
              example: -122.1062
            height:
              description: Height in WGS84 meters
              type: number
              example: 50.2

  VolumeResponse:
    type: object
    format: json
    properties:
      uuid_serial:
        description: Serial number of the aircraft
        type: string
        example: 'INTCJ123-4567-890'
      uuid_reg:
        description: Country/State registration number of the aircraft
        type: string
        example: 'FA12345897'
      uuid_operation:
        description: UTM Flight ID for this flight
        type: string
        example: 'a3423b-213401-0023'
      drone_type:
        description: Generic type of drone
        type: string
        default: unknown
        enum:
          - unknown
          - vtol
          - fixed_wing
          - multirotor
      volumes:
        type: array
        items:
          properties:
            timestamp_start:
              description: Start time of this volume
              type: string
              format: date-time
              example: '2015-08-20T03:14:32.819+00:00'
            timestamp_end:
              description: End time of this volume
              type: string
              format: date-time
              example: '2015-08-20T03:14:33.899+00:00'
            volume:
              description: GeoJSON version of the boundary of this volume
              type: object
              properties:
                type:
                  description: The type of Geometry; must be 'Polygon'.
                  type: string
                  enum:
                  - Polygon
                  example: 'Polygon'
                coordinates:
                  type: array
                  description: Number of polygons; must be 1.
                  minItems: 1
                  maxItems: 1
                  items:
                    type: array
                    description: Vertices defining polygon. First and last vertices must be identical.
                    minItems: 4
                    maxItems: 100
                    items:
                      type: array
                      description: Coordinates of vertices as (longitude, latitude).
                      maxItems: 2
                      minItems: 2
                      items:
                        type: number
                        format: double
                    example: [[-122.1067, 37.4096], [-122.1063, 37.4099], [-122.1058, 37.4094], [-122.1067, 37.4096]]
                height_lower:
                  description: Lower bound height of this volume in WGS84 meters
                  type: number
                  example: 10
                height_upper:
                  description: Upper bound height of this volume in WGS84 meters
                  type: number
                  example: 110

  JSendFlightInformationResponse:
    type: object
    properties:
      status:
        type: string
        minLength: 1
        maxLength: 100
        example: 'success'
      data:
        $ref: '#/definitions/FlightInformationResponse'

  FlightInformationResponse:
    type: object
    format: json
    properties:
      uuid_serial:
        description: Serial number of the aircraft
        type: string
        example: 'INTCJ123-4567-890'
      uuid_reg:
        description: Country/State registration number of the aircraft
        type: string
        example: 'FA12345897'
      uuid_operation:
        description: UTM Flight ID for this flight
        type: string
        example: 'a3423b-213401-0023'
      drone_type:
        description: Generic type of drone
        type: string
        default: unknown
        enum:
          - unknown
          - vtol
          - fixed_wing
          - multirotor
        example: 'vtol'
      drone_make:
        description: Manufacturer of vehicle
        type: string
        example: 'DJI'
      drone_model:
        description: Model of vehicle
        type: string
        example: 'Inspire 2'
      operation_details:
        type: string
        description: Text of Operator and Purpose
        example: 'SafeFlightDrone company doing survey. See my privacy policy www.sfd.com/privacy.'
      accuracy_horizontal:
        description: The horizontal accuracy of the report position, meters
        type: number
        minimum: 0
      accuracy_vertical:
        description: The vertical accuracy of the reported position, meters
        type: number
        minimum: 0
      speed_ns:
        description: Speed North/South (NED system implies bearing), m/s
        type: number
        example: 5.2
      speed_ew:
        description: Speed East/West (NED system implies bearing), m/s
        type: number
        example: 1.9
      speed_ud:
        description: Speed Up/Down (NED system implies bearing), m/s
        type: number
        example: 0.2
      latitude_operator:
        description: Latitude of pilot location
        type: number
        minimum: -90
        maximum: 90
        example: 37.4100
      longitude_operator:
        description: Longitude of pilot location
        type: number
        minimum: -180
        maximum: 180
        example: -122.1056
      latitude_takeoff:
        description: Latitude of takeoff point
        type: number
        minimum: -90
        maximum: 90
        example: 37.4100
      longitude_takeoff:
        description: Longitude of takeoff point
        type: number
        minimum: -180
        maximum: 180
        example: -122.1056
      latitude_destination:
        description: Latitude of next destination or return to home point
        type: number
        minimum: -90
        maximum: 90
        example: 37.4100
      longitude_destination:
        description: Longitude of next destination or return to home point
        type: number
        minimum: -180
        maximum: 180
        example: -122.1056

# Added by API Auto Mocking Plugin
host: node1.staging.interussplatform.com:8121
basePath: /
schemes:
 - https
