# Brings up a full stand-alone DSS sandbox environment with stock golang images.

# To bring up this system:
# docker-compose -f docker-compose_golang.yaml -p dss_sandbox up

version: '3.7'

services:

  dss-crdb-for-debugging:
    image: cockroachdb/cockroach:v19.1.2
    command: start --insecure
    expose:
      - 26257
    ports:
      - "8080:8080"
    restart: always

  grpc-backend-for-debugging:
    image: golang:1.13
    volumes:
      - ../..:/usr/src/dss:ro
    working_dir: /usr/src/dss
    command: go run cmds/grpc-backend/main.go -cockroach_host dss-crdb-for-debugging -public_key_files build/test-certs/auth2.pem -reflect_api -log_format console -dump_requests -accepted_jwt_audiences localhost
    expose:
      - 8081
    depends_on:
      - dss-crdb-for-debugging

  http-gateway-for-debugging:
    image: golang:1.13
    volumes:
      - ../..:/usr/src/dss:ro
    working_dir: /usr/src/dss
    command: go run cmds/http-gateway/main.go -grpc-backend grpc-backend-for-debugging:8081 -addr :8082
    ports:
      - "8082:8082"
    depends_on:
      - grpc-backend-for-debugging

  dummy-oauth:
    image: golang:1.13
    volumes:
      - ../..:/usr/src/dss:ro
    working_dir: /usr/src/dss
    command: go run cmds/dummy-oauth/main.go -private_key_file build/test-certs/auth2.key
    ports:
      - "8085:8085"
