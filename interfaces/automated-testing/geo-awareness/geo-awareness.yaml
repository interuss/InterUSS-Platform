openapi: 3.0.2
info:
  title: Geo-Awareness Automated Test Interfaces
  version: 0.0.1
  license:
    name: Apache License v2.0
    url: https://github.com/interuss/dss/blob/master/LICENSE
  description: >-
    This interface is implemented by every USS wishing to be tested by the automated testing framework.
    The automated testing suite calls this interface to load test data into the USS system under test and
    read Geo-Awareness information to evaluate its processing and interpretation.

servers:
  - url: https://uss.example.com/geo-awareness

components:
  securitySchemes:
    Authority:
      type: oauth2
      flows:
        clientCredentials:
          tokenUrl: https://auth.example.com/oauth/token
          scopes:
            geo-awareness.test: |-
              Client may instruct the USS under test to load Geozone data and may read Geo-Awareness information.
      description: |-
        Authorization from, or on behalf of, an authorization authority, augmenting standard Geo-Awareness authorization for the purpose of automated testing.

  schemas:
    UUIDv4Format:
      description: >-
        String whose format matches a version-4 UUID according to RFC 4122.
      maxLength: 36
      minLength: 36
      type: string
      format: uuid
      pattern: >-
        ^[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-4[0-9a-fA-F]{3}\\-[8-b][0-9a-fA-F]{3}\\-[0-9a-fA-F]{12}$
      example: 03e5572a-f733-49af-bc14-8a18bd53ee39

    StatusResponse:
      type: object
      required:
        - status
      properties:
        status:
          description: >-
            The status of the USS automated testing interface.

            - `Starting`: the USS is starting and the automated test driver should wait before sending requests.

            - `Ready`: the USS is ready to receive test requests.
          type: string
          enum: [Starting, Ready]
          example: Ready
        version:
          description: |-
            Arbitrary string representing the version of the USS system to be tested.
          type: string
          example: v0.0.1-445ad3

    CreateGeozoneSourceRequest:
      type: object
      properties:
        https_source:
          $ref: '#/components/schemas/GeozoneHttpsSource'

    GeozoneHttpsSource:
      type: object
      required:
        - url
      properties:
        url:
          type: string
          format: url
          description: The URL at which the Geozone data shall be downloaded from.
          example: https://caa.example.com/geozones.json
        format:
          type: string
          description: The format of the response expected from the source.
          enum: [ED-269]
          example: ED-269

    GeozoneSourceResponse:
      type: object
      required:
        - result
      properties:
        result:
          description: >-
            The status of the Geozone source and the handling of its data by the USS.

            - `Activating`: the USS is processing the request and is currently activating the Geozone data.

            - `Ready`: the Geozone data has been successfully activated and the USS is ready to receive test requests.

            - `Deactivating`: the Geozone data is being deactivated.

            - `Unsupported`: the USS cannot process the dataset type specified.

            - `Rejected`: the Geozone data was rejected because it is invalid.

            - `Error`: the Geozone data activation or deactivation failed. The message field is required in this case.
          type: string
          enum: [Activating, Ready, Deactivating, Unsupported, Rejected, Error]
          example: Ready
        message:
          description: Human-readable explanation of the result for debugging purpose only. This field is required when the result value is `Error`.
          type: string
          example: |-
            Unable to download the dataset https://caa.example.com/geozones.json. Connection refused.

    #########################################################################
    #################### Start of ED-269 definitions    #####################
    #########################################################################

    verticalReferenceType:
      type: string
      enum:
        - AGL
        - AMSL

    polygonType:
      type: object
      description: See ED-269 standard for details.
      required:
        - type
        - coordinates
      properties:
        type:
          type: string
          enum:
            - Polygon
        coordinates:
          type: array
          items:
            type: array
            minItems: 4
            items:
              type: array
              minItems: 2
              maxItems: 2
              items:
                type: number

    circleType:
      type: object
      description: See ED-269 standard for details.
      required:
        - type
        - center
        - radius
      properties:
        type:
          type: string
          enum:
            - Circle
        center:
          type: array
          minItems: 2
          maxItems: 2
          items:
            type: number
        radius:
          type: number
          exclusiveMinimum: 0

    genericReply:
      type: object
      required:
        - requestStatus
        - requestProcessedTimeStamp
      properties:
        requestStatus:
          type: string
          enum:
            - OK
            - NOK
        requestExceptionDescription:
          type: string
        requestProcessedTimeStamp:
          type: string

    weekDayType:
      type: string
      enum:
        - MON
        - TUE
        - WED
        - THU
        - FRI
        - SAT
        - SUN
        - ANY

    dailyPeriod:
      type: object
      required:
        - day
        - startTime
        - endTime
      properties:
        day:
          type: array
          minItems: 1
          maxItems: 7
          items:
            $ref: '#/components/schemas/weekDayType'
        startTime:
          type: string
          format: time
        endTime:
          type: string
          format: time

    UASZoneAuthority:
      type: object
      properties:
        name:
          type: string
          maxLength: 200
        service:
          type: string
          maxLength: 200
        email:
          type: string
          format: email
        contactName:
          type: string
          maxLength: 200
        siteURL:
          type: string
          maxLength: 200
        phone:
          type: string
          maxLength: 200
        purpose:
          type: string
          enum:
            - AUTHORIZATION
            - NOTIFICATION
            - INFORMATION
        intervalBefore:
          description: See ED-269 standard for details.
          type: string
          format: duration

    UASZoneTimePeriod:
      type: object
      required:
        - permanent
      properties:
        permanent:
          type: string
          enum:
            - YES
            - NO
        startDateTime:
          type: string
          format: date-time
        endDateTime:
          type: string
          format: date-time
        schedule:
          type: array
          minItems: 1
          items:
            $ref: '#/components/schemas/dailyPeriod'

    UASZoneVersion:
      type: object
      required:
        - identifier
        - country
        - type
        - restriction
        - zoneAuthority
        - geometry
      properties:
        identifier:
          type: string
          maxLength: 7
        country:
          type: string
          minLength: 3
          maxLength: 3
        name:
          type: string
          maxLength: 200
        type:
          type: string
          enum:
            - COMMON
            - CUSTOMIZED
        restriction:
          type: string
          enum:
            - PROHIBITED
            - REQ_AUTHORISATION
            - CONDITIONAL
            - NO_RESTRICTION
        restrictionConditions:
          type: array
          items:
            type: string
        region:
          type: integer
        reason:
          type: array
          maxItems: 9
          items:
            type: string
            enum:
              - AIR_TRAFFIC
              - SENSITIVE
              - PRIVACY
              - POPULATION
              - NATURE
              - NOISE
              - FOREIGN_TERRITORY
              - EMERGENCY
              - OTHER
        otherReasonInfo:
          type: string
          maxLength: 30
        regulationExemption:
          type: string
          enum:
            - YES
            - NO
        uSpaceClass:
          type: string
          maxLength: 100
        message:
          type: string
          maxLength: 200
        zoneAuthority:
          type: array
          items:
            $ref: '#/components/schemas/UASZoneAuthority'
          minItems: 1
        applicability:
          type: array
          items:
            $ref: '#/components/schemas/UASZoneTimePeriod'
        geometry:
          type: array
          items:
            $ref: '#/components/schemas/UASZoneAirspaceVolume'
        extendedProperties:
          type: object
      additionalProperties: false

    UASZoneAirspaceVolume:
      type: object
      properties:
        uomDimensions:
          type: string
          enum:
            - M
            - FT
        lowerLimit:
          type: integer
        lowerVerticalReference:
          $ref: '#/components/schemas/verticalReferenceType'
        upperLimit:
          type: integer
        upperVerticalReference:
          $ref: '#/components/schemas/verticalReferenceType'
        horizontalProjection:
          oneOf:
            - $ref: '#/components/schemas/polygonType'
            - $ref: '#/components/schemas/circleType'
      required:
        - uomDimensions
        - lowerVerticalReference
        - upperVerticalReference
        - horizontalProjection

    UASZonesRequest:
      type: object
      properties:
        airspaceVolume:
          $ref: '#/components/schemas/UASZoneAirspaceVolume'
        regions:
          type: array
          items:
            type: integer
        startDateTime:
          type: string
          format: date-time
        endDateTime:
          type: string
          format: date-time

    UASZonesReply:
      type: object
      required:
        - genericReply
      properties:
        UASZoneList:
          type: array
          items:
            # The Open API reference to the abstract class defined in UASZone.json was not found in the standard.
            # The UASZoneVersion is used instead since it is the only inherited class.
            $ref: '#/components/schemas/UASZoneVersion'
        genericReply:
          $ref: '#/components/schemas/genericReply'

    #######################################################################
    #################### END of ED-269 definitions    #####################
    #######################################################################

paths:
  /v1/status:
    get:
      operationId: GetStatus
      security:
        - Authority:
            - geo-awareness.test
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusResponse'
          description: >-
            The USS automated testing interface is activated and its status was retrieved successfully.
        '401':
          description: Bearer access token was not provided in Authorization header, token could not be decoded, or token was invalid.
        '403':
          description: The access token was decoded successfully but did not include a scope appropriate to this endpoint.
        '404':
          description: The USS automated testing interface is not activated.
      summary: Status of the USS automated testing interface
      description: Get the status of the USS automated testing interface.


  /v1/geozone_sources/{geozone_source_id}:
    parameters:
      - name: geozone_source_id
        in: path
        required: true
        description: A UUID string identifying a Geozone data source.
        schema:
          $ref: '#/components/schemas/UUIDv4Format'

    put:
      security:
        - Authority:
            - geo-awareness.test
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateGeozoneSourceRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeozoneSourceResponse'
          description: >-
            Request has been correctly handled and the USS has been instructed to import and activate the Geozone data from the source.
        '401':
          description: Bearer access token was not provided in Authorization header, token could not be decoded, or token was invalid.
        '403':
          description: The access token was decoded successfully but did not include a scope appropriate to this endpoint.
      operationId: PutGeozoneSource
      summary: Import and activate a Geozone source
      description: Instructs the USS to import and activate the Geozone data from this source.

    get:
      security:
        - Authority:
            - geo-awareness.test
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeozoneSourceResponse'
          description: >-
            The Geozone source exists in the USS and its status was retrieved successfully.
        '401':
          description: Bearer access token was not provided in Authorization header, token could not be decoded, or token was invalid.
        '403':
          description: The access token was decoded successfully but did not include a scope appropriate to this endpoint.
        '404':
          description: The Geozone source has been successfully deactivated or didn't exist.
      operationId: CreateGeozoneSourceRequest
      summary: Status of a Geozone source
      description: Get the status of the Geozone source and its data.

    delete:
      security:
        - Authority:
            - geo-awareness.test
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeozoneSourceResponse'
          description: >-
            Request has been correctly handled and the Geozones dataset will be deleted by the USS.
            Status of the dataset shall be checked using the GET method until it returns a 404.
        '401':
          description: Bearer access token was not provided in Authorization header, token could not be decoded, or token was invalid.
        '403':
          description: The access token was decoded successfully but did not include a scope appropriate to this endpoint.
      operationId: DeleteGeozoneSource
      summary: Deactivate a Geozone source
      description: Instructs the USS to deactivate the Geozone source and its data.

  /v1/geozones/query:
    post:
      security:
        - Authority:
            - geo-awareness.test
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UASZonesRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UASZonesReply'
          description: >-
            Checklist was retrieved successfully.
        '401':
          description: Bearer access token was not provided in Authorization header, token could not be decoded, or token was invalid.
        '403':
          description: The access token was decoded successfully but did not include a scope appropriate to this endpoint.
      operationId: QueryGeozones
      summary: Query Geozones
      description: Query all relevant Geozones that are within or intersect the airspace of interest and are valid for the specified period of interest.
