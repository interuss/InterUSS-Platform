openapi: 3.0.2
info:
    title: Automated testing tool for USS Qualifier
    version: 0.0.1
    description: >-
        This is an interface to run the qualifier tests.

components:
    schemas:
        TestRunSpecification:
            type: object
            properties:
                input_files:
                    description: >-
                        Comma separated list of flight record file names.
                    type: array
                    items:
                        type: string
                auth_spec:
                    description: >-
                        User authentication specification.
                    type: string
                user_config:
                    description: >-
                        User authentication configuration.
                    type: string
        CreateTestRunRequest:
            type: object
            required:
                - flight_records
                - auth_spec
                - user_config
            properties:
                flight_records:
                    description: >-
                        Comma separated list of flight record file names. Files should be uploaded by upload method before running the tests.
                    type: string
                auth_spec:
                    description: >-
                        User authentication specification.
                    type: string
                user_config:
                    description: >-
                        User authentication configuration.
                    type: string
        FlightRecordsUploadKmlResponse:
            type: object
            properties:
                id:
                    $ref: "#/components/schemas/TaskID"
                status_message:
                    type: string
                    example: "A task has been started in the background."
                    description: >-
                        Status of currently running task.
                files:
                    type: array
                    items:
                        type: string
                background_tasks:
                    type: array
                    items:
                        type: string
        FlightRecordsUploadJsonResponse:
            type: object
            properties:
                id:
                    $ref: "#/components/schemas/TaskID"
                status_message:
                    type: string
                    example: "A task has been started in the background."
                    description: >-
                        Status of currently running task.
                files:
                    type: array
                    items:
                        type: string
        TestRunResponse:
            type: object
            properties:
                meta_data:
                    type: object
                    properties:
                        task_id:
                            $ref: "#/components/schemas/TaskID"
                        task_status:
                            type: string
                status_message:
                    type: string
                    example: "A task has been started in the background."
                    description: >-
                        Status of currently running task.
                user_id:
                    type: string
                    description: >-
                        User ID of user running the tests.
                specification:
                    $ref: "#/components/schemas/TestRunSpecification"
                report:
                    type: object
                    description: >-
                        Content of test runs' json output file.
            required:
                - user_id
                - specification

        TestsResponse:
            type: object
            properties:
                test_runs:
                    type: object
                    additionalProperties:
                        type: object
                        $ref: "#/components/schemas/TestRunResponse"
        TaskID:
            description: >-
                An exisitng/ newly created ID for the running background task.
            type: string
            example: 2f8343be-6482-4d1b-a474-16847e01af1e
        TestRunID:
            description: >-
                A file name of one of the output files generated by previous test runs.
            type: string
            example: 2022-04-06_235836_1.json
        TaskIdStatusResponse:
            type: object
            required:
                - task_status
            properties:
                task_status:
                    type: string
                    description: >-
                        Returns current status of the background task.
                    example: "Started|Finished"
                task_result:
                    type: object
                    description: >-
                        Tests result if task has completed.
                filename:
                    type: string
                    description: >-
                        filename if test result is saved in an output report file.

paths:
    /api/test_runs:
        post:
            description: "Creates a backround task to execute the tests"
            requestBody:
                content:
                    multipart/form-data:
                        schema:
                            $ref: "#/components/schemas/CreateTestRunRequest"
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/TestRunResponse"
                    description: Test execution request submitted successfully
                "404":
                    description: Testing interface is not activated.
                "400":
                    description: Flight record not found.
        get:
            description: "Returns an object containing test runs and its details"
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/TestsResponse"
                    description: >-
                        Returns an object containing list of output files generated from last test runs.
    /api/test_runs/{test_id}:
        get:
            description: "Returns detailed output of a given test_id, where test_id is one of the test runs' output filenames."
            parameters:
                - name: test_id
                  in: path
                  required: true
                  description: An output file name for one of the test runs.
                  schema:
                      $ref: "#/components/schemas/TestRunID"
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/TestsResponse"
                    description: >-
                        Returns an object containing input specifications and output generated for a test run.
                "400":
                    description: Test execution not found.
    /api/tasks/{task_id}:
        get:
            description: "Get status of the task filter by task id."
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/TaskIdStatusResponse"
                    description: >-
                        Returns current status of the task, along with result, if result is available.
                "400":
                    description: Status is not avilable for task ID.
        parameters:
            - name: task_id
              in: path
              required: true
              description: A task ID of an initiated task.
              schema:
                  $ref: "#/components/schemas/TaskID"
    /api/flight_records/json:
        post:
            description: "Upload flight record json files to be used to run tests."
            requestBody:
                content:
                    multipart/form-data:
                        schema:
                            type: object
                            properties:
                                files:
                                    type: array
                                    items:
                                        type: string
                                        format: binary
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/FlightRecordsUploadJsonResponse"
                    description: >-
                        Returns Human readable message of uploaded file status.
                "400":
                    description: Failed to upload files.
    /api/flight_records/kml:
        post:
            description: "Upload KML flight records that are processed to generate flight records json files."
            requestBody:
                content:
                    multipart/form-data:
                        schema:
                            type: object
                            properties:
                                files:
                                    type: array
                                    items:
                                        type: string
                                        format: binary
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/FlightRecordsUploadKmlResponse"
                    description: >-
                        Returns task details of the task launched in the background to process KML files.
                "400":
                    description: Failed to upload files.

servers:
    - url: http://localhost:8072
      variables: {}
